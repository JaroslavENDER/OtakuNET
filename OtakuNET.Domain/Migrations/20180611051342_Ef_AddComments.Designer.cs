// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using OtakuNET.Domain.DataProviders;
using System;

namespace OtakuNET.Domain.Migrations
{
    [DbContext(typeof(EfDbContext))]
    [Migration("20180611051342_Ef_AddComments")]
    partial class Ef_AddComments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OtakuNET.Domain.Entities.Animanga", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("ImageSrc");

                    b.Property<double>("Raiting");

                    b.Property<string>("StudioImageSrc");

                    b.Property<string>("StudioName")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Key");

                    b.ToTable("Animanga");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Animanga");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.AnimangaLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnimangaKey")
                        .IsRequired();

                    b.Property<string>("Href")
                        .IsRequired();

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("AnimangaKey");

                    b.ToTable("AnimangaLink");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Anime_AnimeList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnimeKey")
                        .IsRequired();

                    b.Property<int>("ListId");

                    b.HasKey("Id");

                    b.HasIndex("AnimeKey");

                    b.HasIndex("ListId");

                    b.ToTable("Anime_AnimeList");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.AnimeSeason", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Key");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnimeKey");

                    b.Property<string>("MangaKey");

                    b.Property<int?>("NewsId");

                    b.Property<string>("ProfileId");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AnimeKey");

                    b.HasIndex("MangaKey");

                    b.HasIndex("NewsId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.DataListInfomation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnimeKey");

                    b.Property<string>("MangaKey");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int?>("UpdateId");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AnimeKey");

                    b.HasIndex("MangaKey");

                    b.HasIndex("UpdateId");

                    b.ToTable("DataListInfomation");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Data");

                    b.Property<string>("MimeType");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Manga_MangaList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ListId");

                    b.Property<string>("MangaKey")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.HasIndex("MangaKey");

                    b.ToTable("Manga_MangaList");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageSrc");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Text")
                        .IsRequired();

                    b.Property<DateTime>("Timestamp");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AvatarId");

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.ProfileHistoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnimeKey");

                    b.Property<string>("MangaKey");

                    b.Property<string>("ProfileId")
                        .IsRequired();

                    b.Property<string>("Text")
                        .IsRequired();

                    b.Property<DateTime>("Timestamp");

                    b.Property<int?>("UserListId");

                    b.HasKey("Id");

                    b.HasIndex("AnimeKey");

                    b.HasIndex("MangaKey");

                    b.HasIndex("ProfileId");

                    b.HasIndex("UserListId");

                    b.ToTable("ProfileHistoryItem");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Update", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnimeKey")
                        .IsRequired();

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AnimeKey");

                    b.ToTable("Updates");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.UserList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("UserList");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UserList");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Anime", b =>
                {
                    b.HasBaseType("OtakuNET.Domain.Entities.Animanga");

                    b.Property<string>("SeasonKey")
                        .IsRequired();

                    b.HasIndex("SeasonKey");

                    b.ToTable("Anime");

                    b.HasDiscriminator().HasValue("Anime");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Manga", b =>
                {
                    b.HasBaseType("OtakuNET.Domain.Entities.Animanga");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.ToTable("Manga");

                    b.HasDiscriminator().HasValue("Manga");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.UserAnimeList", b =>
                {
                    b.HasBaseType("OtakuNET.Domain.Entities.UserList");

                    b.Property<string>("ProfileId")
                        .IsRequired();

                    b.HasIndex("ProfileId");

                    b.ToTable("UserAnimeList");

                    b.HasDiscriminator().HasValue("UserAnimeList");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.UserMangaList", b =>
                {
                    b.HasBaseType("OtakuNET.Domain.Entities.UserList");

                    b.Property<string>("ProfileId")
                        .IsRequired()
                        .HasColumnName("UserMangaList_ProfileId");

                    b.HasIndex("ProfileId");

                    b.ToTable("UserMangaList");

                    b.HasDiscriminator().HasValue("UserMangaList");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.AnimangaLink", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.Animanga", "Animanga")
                        .WithMany("Links")
                        .HasForeignKey("AnimangaKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Anime_AnimeList", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.Anime", "Anime")
                        .WithMany("UserLists")
                        .HasForeignKey("AnimeKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OtakuNET.Domain.Entities.UserAnimeList", "List")
                        .WithMany("Anime")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Comment", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.Anime", "Anime")
                        .WithMany("Comments")
                        .HasForeignKey("AnimeKey");

                    b.HasOne("OtakuNET.Domain.Entities.Manga", "Manga")
                        .WithMany("Comments")
                        .HasForeignKey("MangaKey");

                    b.HasOne("OtakuNET.Domain.Entities.News", "News")
                        .WithMany("Comments")
                        .HasForeignKey("NewsId");

                    b.HasOne("OtakuNET.Domain.Entities.Profile", "Profile")
                        .WithMany("Comments")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.DataListInfomation", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.Anime", "Anime")
                        .WithMany("Information")
                        .HasForeignKey("AnimeKey");

                    b.HasOne("OtakuNET.Domain.Entities.Manga", "Manga")
                        .WithMany("Information")
                        .HasForeignKey("MangaKey");

                    b.HasOne("OtakuNET.Domain.Entities.Update", "Update")
                        .WithMany("Infomation")
                        .HasForeignKey("UpdateId");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Manga_MangaList", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.UserMangaList", "List")
                        .WithMany("Manga")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OtakuNET.Domain.Entities.Manga", "Manga")
                        .WithMany("UserLists")
                        .HasForeignKey("MangaKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Profile", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.Image", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.ProfileHistoryItem", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.Anime", "Anime")
                        .WithMany()
                        .HasForeignKey("AnimeKey");

                    b.HasOne("OtakuNET.Domain.Entities.Manga", "Manga")
                        .WithMany()
                        .HasForeignKey("MangaKey");

                    b.HasOne("OtakuNET.Domain.Entities.Profile", "Profile")
                        .WithMany("History")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OtakuNET.Domain.Entities.UserList", "UserList")
                        .WithMany()
                        .HasForeignKey("UserListId");
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Update", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.Anime", "Anime")
                        .WithMany("Updates")
                        .HasForeignKey("AnimeKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.Anime", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.AnimeSeason", "Season")
                        .WithMany("Animes")
                        .HasForeignKey("SeasonKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.UserAnimeList", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.Profile", "Profile")
                        .WithMany("AnimeListSet")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OtakuNET.Domain.Entities.UserMangaList", b =>
                {
                    b.HasOne("OtakuNET.Domain.Entities.Profile", "Profile")
                        .WithMany("MangaListSet")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
